[tool.poetry]
name = "<%= projectName %>"
version = "0.1.0"
description = "<%- projectDescription %>"
authors = [
    "<%= authorName %> <<%= authorEmail %>>",
]

[tool.poetry.dependencies]
python = "<%= pythonVersion %>"
<% if (includeApi) { %>
fastapi = {extras = ["all"], version = "^0.95.1"}
loguru = "^0.7.0"
<% } %>

[tool.poetry.dev-dependencies]
pre-commit = "^2"
ruff = "^0"
pytest = "^7"
pytest-cov = "^3"
mypy = "^1.2"
black = "^22"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

# Packages configs

## coverage

[tool.coverage.run]
branch = true

[tool.coverage.report]
skip_empty = true
fail_under = 70.00
precision = 2

## black

[tool.black]
target-version = ['py<%= pythonMajorVersionShortcut %>']

## ruff

[tool.ruff]
#"E" : pycodestyle issues, see https://beta.ruff.rs/docs/rules/#pycodestyle-e-w,
#"F" : pyflakes issues, see https://beta.ruff.rs/docs/rules/#pyflakes-f,
#"D4" : PyDocStyle Docstring Content issues, see https://beta.ruff.rs/docs/rules/#pydocstyle-d,
#"PT" : Flake8 Pytest Style issues, see https://beta.ruff.rs/docs/rules/#flake8-pytest-style-pt,
#"PL" : Pylint issues, see https://beta.ruff.rs/docs/rules/#pylint-pl,
#"I" : isort issues, see https://beta.ruff.rs/docs/rules/#isort-i

select = ["E", "F", "D4", "PT", "PL", "I"]

## mypy

[tool.mypy]
python_version = "<%= pythonMajorVersion %>"
# Enable all optional error checking flags, providing stricter type checking; see https://mypy.readthedocs.io/en/stable/getting_started.html#strict-mode-and-configuration
strict = true

# Type-check the interiors of functions without type annotations; if missing, mypy won't check function bodies without type hints, for instance those coming from third-party libraries
check_untyped_defs = true

# Make __init__.py file optional for package definitions; if missing, mypy requires __init__.py at packages roots, see https://mypy.readthedocs.io/en/stable/running_mypy.html#mapping-file-paths-to-modules
explicit_package_bases = true
