[tool.poetry]
name = "<%= projectName %>"
version = "0.1.0"
description = "<%- projectDescription %>"
authors = [
    "<%= authorName %> <<%= authorEmail %>>",
]

[tool.poetry.dependencies]
python = "<%= pythonVersion %>"

[tool.poetry.dev-dependencies]
isort = "^5"
pre-commit = "^2"
pylint = "^2"
pytest = "^7"
pytest-cov = "^3"
mypy = "^1.2"
black = "^22"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

# Packages configs

## coverage

[tool.coverage.run]
branch = true

[tool.coverage.report]
skip_empty = true
fail_under = 70.00
precision = 2

## black

[tool.black]
target-version = ['py<%= pythonMajorVersionShortcut %>']

## pylint

[tool.pylint.messages_control]
disable = [
    # already managed by isort:
    "ungrouped-imports",
    "wrong-import-order",
    "wrong-import-position",
]

[tool.pylint.similarities]
ignore-signatures="yes"
ignore-imports="yes"

[tool.pylint.basic]
no-docstring-rgx = "^_|^test_|^Test[A-Z]" # no docstrings for tests

## isort

[tool.isort]
profile = "black"
multi_line_output = 3
py_version=<%= pythonMajorVersionShortcut %>

## mypy

[tool.mypy]
python_version = "<%= pythonMajorVersion %>"
strict = true # Enables all optional error checking flags, providing stricter type checking
disallow_any_unimported = true # Disallows using types from unfollowed imports, forcing proper import handling
check_untyped_defs = true # Type-checks the interiors of functions without type annotations
explicit_package_bases = true # Makes __init__.py file optional for package definitions
